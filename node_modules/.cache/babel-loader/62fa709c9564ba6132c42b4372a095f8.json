{"ast":null,"code":"var _jsxFileName = \"/Users/vanikarikalan/Desktop/clicky-game/my-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport CarCard from \"./components/CarCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score\";\nimport TopScore from \"./components/TopScore\";\nimport cars from \"./cars.json\";\n\nclass App extends Component {\n  // Setting this.state.cars to the cars json array and initializing score to 0\n  constructor(props) {\n    super(props);\n\n    this.imageClick = event => {\n      const selectedCar = event.target.alt;\n\n      if (this.state.selectedCars.indexOf(selectedCar) === -1) {\n        this.setState({\n          selectedCars: this.state.selectedCars.concat([selectedCar]),\n          cars: this.shuffleCars(cars),\n          score: this.state.score + 1,\n          topScore: this.state.score >= this.state.topScore ? this.state.score : this.state.topScore\n        });\n      } else {\n        // cars = this.shuffleCars(cars);\n        this.setState({\n          selectedCars: [],\n          cars: this.shuffleCars(cars),\n          score: 0\n        });\n      }\n    };\n\n    this.state = {\n      score: 0,\n      cars: cars,\n      selectedCars: [],\n      topScore: 0\n    };\n  }\n\n  shuffleCars(cars) {\n    for (let i = cars.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      var _ref = [cars[j], cars[i]];\n      cars[i] = _ref[0];\n      cars[j] = _ref[1];\n    }\n\n    return cars;\n  }\n\n  // Map over this.state.cars and render a CarCard component for each car object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Remember your rides? \"), React.createElement(TopScore, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.topScore), React.createElement(Score, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" \", this.state.score, \" \"), this.state.cars.map(car => React.createElement(CarCard, {\n      imageClick: this.imageClick,\n      key: car.id,\n      name: car.name,\n      image: car.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vanikarikalan/Desktop/clicky-game/my-app/src/App.js"],"names":["React","Component","CarCard","Wrapper","Title","Score","TopScore","cars","App","constructor","props","imageClick","event","selectedCar","target","alt","state","selectedCars","indexOf","setState","concat","shuffleCars","score","topScore","i","length","j","Math","floor","random","render","map","car","id","name","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CarCard from \"./components/CarCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score\";\nimport TopScore from \"./components/TopScore\";\nimport cars from \"./cars.json\";\n\nclass App extends Component {\n  // Setting this.state.cars to the cars json array and initializing score to 0\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      score : 0,\n      cars : cars,\n      selectedCars : [],\n      topScore : 0\n    }\n  }\n  \n  shuffleCars(cars) {\n    for (let i = cars.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [cars[i], cars[j]] = [cars[j], cars[i]];\n    }\n    return cars\n  };\n\n  //when you click on a card ... the click is validated and cards are reshuffled\n  imageClick = event => {\n    const selectedCar = event.target.alt;\n    if (this.state.selectedCars.indexOf(selectedCar) === -1) {\n      this.setState({\n        selectedCars: this.state.selectedCars.concat([selectedCar]),\n        cars : this.shuffleCars(cars),\n        score : this.state.score + 1,\n        topScore : (this.state.score >= this.state.topScore) ? this.state.score : this.state.topScore\n      });\n    } else {\n      // cars = this.shuffleCars(cars);\n      this.setState({\n        selectedCars: [],\n        cars : this.shuffleCars(cars),\n        score : 0\n    });\n\n    }\n  }\n  // Map over this.state.cars and render a CarCard component for each car object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Remember your rides? </Title>\n        <TopScore>{this.state.topScore}</TopScore>\n        <Score> {this.state.score} </Score>\n\n        {this.state.cars.map(car => (\n          <CarCard\n            imageClick = {this.imageClick}\n            key = {car.id}\n            name={car.name}\n            image={car.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}